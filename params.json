{"name":"App-geofence","tagline":"VoltDB example app - track device locations and generate alerts and events when they cross geofence boundaries","body":"VoltDB Example: Geo-Fencing \r\n============================\r\n\r\nUse Case\r\n--------\r\nOne million devices are tracked as they provide continuous position (lat/long) updates and pass in and out of personalized geo-fence boundaries.  Alert events are generated whenever a device exits or enters the fence, which is defined individually for each device based on a \"home\" location and a radius in miles.  \r\n\r\nThe client application creates the set of devices with their geo-fence defintions and then begins generating random device updates.  Each device starts at it's home location and then each subsequent update is a based on a \"random walk\" incremental change from the last position.\r\n\r\nThe database ingests these updates and keeps a history of the positions for each device.  As it processes each update, it also checks to see if this device has a geo-fence enabled and if so, whether the device was previously in-bounds or out-of-bounds.  It calculates the distance from \"home\" to the new location to see if it is in or out of bounds.  If this is a change in status, it generates an \"exit\" or \"entry\" event record, which would result in a notification to the device owner.  All of this logic is found in the \"PositionUpdate\" stored procedure.\r\n\r\nCode organization\r\n-----------------\r\n### db\r\nThe database schema and stored procedures\r\n### client\r\nThe java benchmark client application.\r\n\r\nInstructions\r\n------------\r\n\r\n1. Start the database in the background\r\n\r\n     ./start_db.sh\r\n     \r\n2. Run the client application\r\n\r\n    ./run_client.sh\r\n\r\n3. Open a web browser to VoltDB Studio\r\n\r\n    http://localhost:8080/studio\r\n    \r\n4. Run some queries:\r\n\r\n    -- check for events:\r\n    SELECT * FROM device_event;\r\n    \r\n    -- see the settings for a device:\r\n    SELECT * FROM devices WHERE id = ?;\r\n    \r\n    -- see the position history for a device:\r\n    SELECT * FROM device_location WHERE id = ? ORDER BY ts;\r\n    \r\n5. When finished, stop the database and clean up any temp files\r\n\r\n    voltadmin shutdown\r\n    ./clean.sh\r\n\r\n\r\n\r\n","google":"UA-47652901-5","note":"Don't delete this file! It's used internally to help with page regeneration."}